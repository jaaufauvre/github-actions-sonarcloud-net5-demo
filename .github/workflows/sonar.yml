name: Sonar
on:
  # Read-write repo token
  # Access to secrets
  workflow_run:
    workflows: ["Checkout, Build, Test"]
    types:
      - completed
jobs:
  sonar:
    name: Sonar
    runs-on: windows-latest
    if: >
      ${{ github.event.workflow_run.status == 'completed' && github.event.workflow_run.conclusion == 'success'}}
    steps:
      - name: Restore workspace
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ${{ github.event.workflow_run.workflow_id }}
          run_id: ${{ github.event.workflow_run.id }}
          name: workspace
          path: .
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner  
      - name: Run Sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"jaaufauvre_github-actions-sonarcloud-net5-demo" /o:"jaaufauvre" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.vstest.reportsPaths="./MyClassLibrary.Tests/bin/tests.trx" /d:sonar.cs.opencover.reportsPaths="./MyClassLibrary.Tests/bin/coverage.opencover.xml"
          dotnet build --no-restore
          dotnet test --no-build --verbosity normal -l:"trx;LogFileName=tests.trx" -r:"./MyClassLibrary.Tests/bin/" --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          move ./MyClassLibrary.Tests/bin/*/coverage.opencover.xml ./MyClassLibrary.Tests/bin/
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"